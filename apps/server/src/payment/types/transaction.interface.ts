export interface PaymobWebhookTransaction {
    type: string;
    obj: {
        billing_data: {
            city: string;
            email: string;
            floor: string;
            state: string;
            street: string;
            country: string;
            building: string;
            apartment: string;
            last_name: string;
            first_name: string;
            postal_code: string;
            phone_number: string;
            extra_description: string;
        };
        id: number;
        pending: boolean;
        amount_cents: number;
        success: boolean;
        is_auth: boolean;
        is_capture: boolean;
        is_standalone_payment: boolean;
        is_voided: boolean;
        is_refunded: boolean;
        is_3d_secure: boolean;
        integration_id: number;
        profile_id: number;
        has_parent_transaction: boolean;
        order: {
            id: number;
            created_at: string;
            delivery_needed: boolean;
            merchant: {
                id: number;
                created_at: string;
                phones: string[];
                company_emails: string[];
                company_name: string;
                state: string;
                country: string;
                city: string;
                postal_code: string;
                street: string;
            };
            collector: null;
            amount_cents: number;
            shipping_data: {
                id: number;
                first_name: string;
                last_name: string;
                street: string;
                building: string;
                floor: string;
                apartment: string;
                city: string;
                state: string;
                country: string;
                email: string;
                phone_number: string;
                postal_code: string;
                extra_description: string;
                shipping_method: string;
                order_id: number;
                order: number;
            };
            currency: string;
            is_payment_locked: boolean;
            is_return: boolean;
            is_cancel: boolean;
            is_returned: boolean;
            is_canceled: boolean;
            merchant_order_id: null;
            wallet_notification: null;
            paid_amount_cents: number;
            notify_user_with_email: boolean;
            items: {
                name: string;
                description: string;
                amount_cents: number;
            }[];
            order_url: string;
            commission_fees: number;
            delivery_fees_cents: number;
            delivery_vat_cents: number;
            payment_method: string;
            merchant_staff_tag: null;
            api_source: string;
            data: Record<string, unknown>;
            payment_status: string;
        };
        created_at: string;
        transaction_processed_callback_responses: any[];
        currency: string;
        source_data: {
            pan: string;
            type: string;
            tenure: null;
            sub_type: string;
        };
        api_source: string;
        terminal_id: null;
        merchant_commission: number;
        installment: null;
        discount_details: any[];
        is_void: boolean;
        is_refund: boolean;
        data: {
            gateway_integration_pk: number;
            klass: string;
            created_at: string;
            amount: number;
            currency: string;
            migs_order: {
                acceptPartialAmount: boolean;
                amount: number;
                authenticationStatus: string;
                chargeback: {
                    amount: number;
                    currency: string;
                };
                creationTime: string;
                currency: string;
                description: string;
                id: string;
                lastUpdatedTime: string;
                merchantAmount: number;
                merchantCategoryCode: string;
                merchantCurrency: string;
                status: string;
                totalAuthorizedAmount: number;
                totalCapturedAmount: number;
                totalRefundedAmount: number;
            };
            merchant: string;
            migs_result: string;
            migs_transaction: {
                acquirer: {
                    batch: number;
                    date: string;
                    id: string;
                    merchantId: string;
                    settlementDate: string;
                    timeZone: string;
                    transactionId: string;
                };
                amount: number;
                authenticationStatus: string;
                authorizationCode: string;
                currency: string;
                id: string;
                receipt: string;
                source: string;
                stan: string;
                terminal: string;
                type: string;
            };
            txn_response_code: string;
            acq_response_code: string;
            message: string;
            merchant_txn_ref: string;
            order_info: string;
            receipt_no: string;
            transaction_no: string;
            batch_no: number;
            authorize_id: string;
            card_type: string;
            card_num: string;
            secure_hash: string;
            avs_result_code: string;
            avs_acq_response_code: string;
            captured_amount: number;
            authorised_amount: number;
            refunded_amount: number;
            acs_eci: string;
        };
        is_hidden: boolean;
        payment_key_claims: {
            extra: {
                planId?: string;
                organizationId?: string;
                subscriptionType?: string;
                courseId?: string;
                userId?: string;
                merchant_order_id?: null;
            };
            user_id: number;
            currency: string;
            order_id: number;
            amount_cents: number;
            billing_data: {
                city: string;
                email: string;
                floor: string;
                state: string;
                street: string;
                country: string;
                building: string;
                apartment: string;
                last_name: string;
                first_name: string;
                postal_code: string;
                phone_number: string;
                extra_description: string;
            };
            redirect_url: string;
            integration_id: number;
            lock_order_when_paid: boolean;
            subscription_plan_id: string;
            next_payment_intention: string;
            single_payment_attempt: boolean;
        };
        error_occured: boolean;
        is_live: boolean;
        other_endpoint_reference: null;
        refunded_amount_cents: number;
        source_id: number;
        is_captured: boolean;
        captured_amount: number;
        merchant_staff_tag: null;
        updated_at: string;
        is_settled: boolean;
        bill_balanced: boolean;
        is_bill: boolean;
        owner: number;
        parent_transaction: null;
    };

    accept_fees: number;
    issuer_bank: null;
    transaction_processed_callback_responses: string;
}


export interface PaymobTransaction {
    id: number;
    pending: boolean;
    amount_cents: number;
    success: boolean;
    is_auth: boolean;
    is_capture: boolean;
    is_standalone_payment: boolean;
    is_voided: boolean;
    is_refunded: boolean;
    is_3d_secure: boolean;
    integration_id: number;
    terminal_id: string | null;
    has_parent_transaction: boolean;

    order: {
        id: number;
        created_at: string;
        delivery_needed: boolean;
        merchant: {
            id: number;
            created_at: string;
            phones: string[];
            company_emails: string[];
            company_name: string;
            state: string;
            country: string;
            city: string;
            postal_code: string;
            street: string;
        };
        collector: null;
        amount_cents: number;
        shipping_data: {
            id: number;
            first_name: string;
            last_name: string;
            street: string;
            building: string;
            floor: string;
            apartment: string;
            city: string;
            state: string;
            country: string;
            email: string;
            phone_number: string;
            postal_code: string;
            extra_description: string;
            shipping_method: string;
            order_id: number;
            order: number;
        };
        currency: string;
        is_payment_locked: boolean;
        is_return: boolean;
        is_cancel: boolean;
        is_returned: boolean;
        is_canceled: boolean;
        merchant_order_id: string | null;
        wallet_notification: null;
        paid_amount_cents: number;
        notify_user_with_email: boolean;
        items: {
            name: string;
            description: string;
            amount_cents: number;
        }[];
        order_url: string;
        commission_fees: number;
        delivery_fees_cents: number;
        delivery_vat_cents: number;
        payment_method: string;
        merchant_staff_tag: string | null;
        api_source: string;
        data: Record<string, unknown>;
        payment_status: string;
    };

    created_at: string;
    paid_at: string;
    currency: string;

    source_data: {
        pan: string;
        type: string;
        tenure: string | null;
        sub_type: string;
    };

    api_source: string;
    fees: string;
    vat: string;
    converted_gross_amount: string;

    data: {
        klass: string;
        amount: number;
        acs_eci: string;
        message: string;
        batch_no: number;
        card_num: string;
        currency: string;
        merchant: string;
        card_type: string;
        created_at: string;
        migs_order: {
            id: string;
            amount: number;
            status: string;
            currency: string;
            chargeback: { amount: number; currency: string };
            description: string;
            creationTime: string;
            merchantAmount: number;
            lastUpdatedTime: string;
            merchantCurrency: string;
            acceptPartialAmount: boolean;
            totalCapturedAmount: number;
            totalRefundedAmount: number;
            authenticationStatus: string;
            merchantCategoryCode: string;
            totalAuthorizedAmount: number;
        };
        order_info: string;
        receipt_no: string;
        migs_result: string;
        secure_hash: string;
        authorize_id: string;
        transaction_no: string;
        avs_result_code: string;
        captured_amount: number;
        refunded_amount: number;
        merchant_txn_ref: string;
        migs_transaction: {
            id: string;
            stan: string;
            type: string;
            amount: number;
            source: string;
            receipt: string;
            acquirer: {
                id: string;
                date: string;
                batch: number;
                timeZone: string;
                merchantId: string;
                transactionId: string;
                settlementDate: string;
            };
            currency: string;
            terminal: string;
            authorizationCode: string;
            authenticationStatus: string;
        };
        acq_response_code: string;
        authorised_amount: number;
        txn_response_code: string;
        avs_acq_response_code: string;
        gateway_integration_pk: number;
    };

    is_cashout: boolean;
    wallet_transaction_type: string | null;
    is_upg: boolean;
    is_internal_refund: boolean;

    billing_data: {
        id: number;
        first_name: string;
        last_name: string;
        street: string;
        building: string;
        floor: string;
        apartment: string;
        city: string;
        state: string;
        country: string;
        email: string;
        phone_number: string;
        postal_code: string;
        ip_address: string;
        extra_description: string;
        transaction_id: number;
        created_at: string;
    };

    installment: string | null;
    integration_type: string;
    card_type: string;
    routing_bank: string;
    card_holder_bank: string;
    merchant_commission: number;
    extra_detail: unknown;
    discount_details: unknown[];
    caf_details: unknown[];
    show_caf_in_receipt: boolean | null;
    pre_conversion_currency: string | null;
    pre_conversion_amount_cents: number | null;
    is_host2host: boolean;
    installment_info: {
        items: unknown;
        administrative_fees: unknown;
        down_payment: unknown;
        tenure: unknown;
        finance_amount: unknown;
    };
    vf_loyalty_details: Record<string, unknown>;
    purchase_fees: number;
    original_amount: number;
    is_trx_bank_installment: boolean;
    payment_source: string;
    split_description: unknown[];
    is_void: boolean;
    is_refund: boolean;
    is_hidden: boolean;
    error_occured: boolean;
    is_live: boolean;
    other_endpoint_reference: string | null;
    refunded_amount_cents: number;
    source_id: number;
    is_captured: boolean;
    captured_amount: number;
    merchant_staff_tag: string | null;
    paymob_date: string | null;
    value_date: string | null;
    updated_at: string;
    is_settled: boolean;
    bill_balanced: boolean;
    is_bill: boolean;
    is_reconciled: boolean;
    cogs: number;
    reconciliation_id: string | null;
    owner: number;
    parent_transaction: string | null;
}